plugins {
    id 'java'
    id 'org.jetbrains.kotlin.jvm' version '1.3.71'
    id 'com.google.protobuf' version '0.8.8'
    id 'application'
    id 'com.github.johnrengelman.shadow' version '5.2.0'
}

group 'com.nedellis'
version '1.0-SNAPSHOT'

repositories {
    google()
    jcenter()
    mavenCentral()
    mavenLocal()
}

def grpcVersion = '1.29.0' // CURRENT_GRPC_VERSION
def grpc_kotlin_version = '0.1.1' // CURRENT_GRPC_KOTLIN_VERSION
//def ktor_version = '1.3.2'

configurations {
    ktlint
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8"
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-core:1.3.5'
    implementation "io.grpc:grpc-kotlin-stub:${grpc_kotlin_version}"
    implementation "io.grpc:grpc-netty-shaded:${grpcVersion}"
    implementation "io.grpc:grpc-protobuf:${grpcVersion}"
    implementation "io.grpc:grpc-stub:${grpcVersion}"
    implementation 'com.google.protobuf:protobuf-gradle-plugin:0.8.11'
    implementation "com.github.ajalt:clikt:2.6.0"
    implementation 'org.slf4j:slf4j-simple:1.7.29'
//    implementation "io.ktor:ktor-server-netty:$ktor_version"
//    implementation "io.ktor:ktor-jackson:$ktor_version"
    testCompile group: 'junit', name: 'junit', version: '4.12'
    compileOnly "javax.annotation:javax.annotation-api:1.2"
    implementation "com.google.guava:guava:28.2-jre"
    ktlint "com.pinterest:ktlint:0.35.0"
}

task ktlint(type: JavaExec, group: "verification") {
    description = "Check Kotlin code style."
    main = "com.pinterest.ktlint.Main"
    classpath = configurations.ktlint
    args "src/**/*.kt"
    // to generate report in checkstyle format prepend following args:
    // "--reporter=plain", "--reporter=checkstyle,output=${buildDir}/ktlint.xml"
    // see https://github.com/pinterest/ktlint#usage for more
}
check.dependsOn ktlint

task ktlintFormat(type: JavaExec, group: "formatting") {
    description = "Fix Kotlin code style deviations."
    main = "com.pinterest.ktlint.Main"
    classpath = configurations.ktlint
    args "-F", "src/**/*.kt"
}

protobuf {
    protoc { artifact = 'com.google.protobuf:protoc:3.11.0' }
    plugins {
        grpc {
            artifact = "io.grpc:protoc-gen-grpc-java:${grpcVersion}"
        }
        // Specify protoc to generate using our grpc kotlin plugin
        grpckt {
            artifact = "io.grpc:protoc-gen-grpc-kotlin:${grpc_kotlin_version}"
        }
    }
    generateProtoTasks {
        all()*.plugins {
            grpc {}
            grpckt {}
        }
    }
}

// Inform IDEs like IntelliJ IDEA, Eclipse or NetBeans about the generated code.
sourceSets {
    main {
        java {
            srcDirs 'build/generated/source/proto/main'
        }
    }
}

compileKotlin {
    kotlinOptions.jvmTarget = "1.8"
}
compileTestKotlin {
    kotlinOptions.jvmTarget = "1.8"
}

mainClassName = 'com.nedellis.kotlinraft.MainKt'
